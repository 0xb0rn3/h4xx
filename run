#!/usr/bin/env bash

# Comprehensive Kali Linux Tools Installation Script
# Installs all security tools organized by official Kali Linux categories
# For educational and security research purposes only
# Must be run as root

# Error handling for cleaner script execution
handle_error() {
    echo "Error: $1"
    exit 1
}

# Root privilege check
if [ "$EUID" -ne 0 ]; then 
    handle_error "Please run as root"
fi

# System compatibility check
if [ ! -f "/etc/debian_version" ]; then
    handle_error "This script is for Debian-based systems only"
fi

# Backup system configuration
echo "Creating system backup..."
cp /etc/apt/sources.list /etc/apt/sources.list.backup || handle_error "Failed to backup sources.list"

# Configure Kali repositories
echo "Configuring Kali repositories..."
echo "deb http://http.kali.org/kali kali-rolling main contrib non-free" >> /etc/apt/sources.list
wget -q -O - https://archive.kali.org/archive-key.asc | apt-key add - || handle_error "Failed to import Kali GPG key"

# Update system
echo "Updating package lists..."
apt-get update || handle_error "Failed to update package lists"
apt-get install -y linux-headers-$(uname -r) || handle_error "Failed to install kernel headers"

# Define comprehensive tool categories
declare -A categories
categories=(
    ["Information Gathering"]="ace-voip amap automater braa casefile cdpsnarf cisco-torch cookie-cadger copy-router-config dmitry dnmap dnsenum dnsmap dnsrecon dnstracer dnswalk dotdotpwn enum4linux enumiax eyewitness fiercer firewalk fragroute fragrouter ghost-phisher golismero goofile hping3 ident-user-enum inspy intrace ismtp lbd maltego-teeth masscan metagoofil miranda nbtscan-unixwiz nmap p0f parsero recon-ng set smtp-user-enum snmpcheck sslcaudit sslsplit sslstrip sslyze thc-ipv6 theharvester tlssled twofi urlcrazy wireshark wol-e xplico"

    ["Vulnerability Analysis"]="bbqsql bed cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch copy-router-config doona dotdotpwn greenbone-security-assistant hexorbase jsql lynis nmap ohrwurm openvas-cli openvas-manager openvas-scanner oscanner powerfuzzer sfuzz sidguesser siparmyknife sqlmap sqlninja sqlsus thc-ipv6 tnscmd10g unix-privesc-check yersinia"

    ["Wireless Attacks"]="aircrack-ng asleap bluelog blueranger bluesnarfer bully cowpatty crackle eapmd5pass fern-wifi-cracker ghost-phisher giskismet gqrx kalibrate-rtl killerbee kismet mdk3 mfcuk mfoc mfterm multimon-ng pixiewps reaver redfang spooftooph wifi-honey wifitap wifite"

    ["Web Applications"]="apache-users arachni bbqsql blindelephant burpsuite cutycapt davtest deblaze dirb dirbuster fimap funkload grabber jboss-autopwn joomscan jsql maltego-teeth padbuster paros parsero plecost powerfuzzer proxystrike recon-ng skipfish sqlmap sqlninja sqlsus ua-tester uniscan vega w3af webscarab websploit wfuzz wpscan xsser zaproxy"

    ["Sniffing & Spoofing"]="bettercap burpsuite dnschef fiked hamster-sidejack hexinject iaxflood inviteflood ismtp mitmproxy ohrwurm protos-sip rebind responder rtpbreak rtpinsertsound rtpmixsound sctpscan siparmyknife sipp sipvicious sniffjoke sslsplit sslstrip thc-ipv6 voiphopper webscarab wifi-honey wireshark xspy yersinia zaproxy"

    ["Password Attacks"]="brutespray burpsuite cewl chntpw cisco-auditing-tool cmospwd creddump crunch findmyhash gpp-decrypt hash-identifier hashcat hashid hydra john johnny keimpx maltego-teeth maskprocessor multiforcer ncrack oclgausscrack pack patator polenum rainbowcrack rcracki-mt rsmangler statsprocessor thc-pptp-bruter truecrack webscarab wordlists zaproxy"

    ["Maintaining Access"]="backdoor-factory cymothoa dbd dns2tcp httptunnel intersect nishang polenum powersploit pwnat ridenum sbd u3-pwn webacoo weevely winexe"

    ["Hardware Hacking"]="android-sdk apktool arduino dex2jar sakis3g smali"

    ["Reverse Engineering"]="apktool clang dex2jar diStorm3 edb-debugger jad javasnoop jd ollydbg radare2 recstudio reverse-engineering-tools ropper"

    ["Exploitation Tools"]="armitage beef-xss cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch commix crackle exploitdb jboss-autopwn linux-exploit-suggester maltego-teeth metasploit-framework msfpc routersploit set shellnoob sqlmap thc-ipv6 yersinia"

    ["Stress Testing"]="dhcpig funkload iaxflood inviteflood ipv6-toolkit mdk3 reaver rtpflood slowhttptest t50 termineter thc-ipv6 thc-ssl-dos"

    ["Forensics"]="autopsy binwalk bulk-extractor chntpw cuckoo dc3dd ddrescue dumpzilla extundelete foremost galleta guymager hash-identifier hashdeep hashid magicrescue missidentify pasco pdf-parser pdfid pdgmail peepdf volatility xplico"

    ["Reporting Tools"]="casefile cherrytree cutycapt dos2unix dradis faraday magictree metagoofil nipper-ng pipal"

    ["System Services"]="beef-xss binwalk casefile cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch commix dhcpig funkload iaxflood inviteflood ipv6-toolkit mdk3 reaver rtpflood slowhttptest t50 termineter thc-ipv6 thc-ssl-dos"
)

# Function to install category tools
install_category() {
    local category=$1
    local tools=$2
    
    echo "Installing $category tools..."
    echo "----------------------------------------"
    for tool in $tools; do
        echo "Installing $tool..."
        DEBIAN_FRONTEND=noninteractive apt-get install -y $tool 2>/dev/null || echo "Note: $tool installation deferred"
    done
    echo "Completed installing $category"
    echo "----------------------------------------"
}

# Install all categories
for category in "${!categories[@]}"; do
    echo "Starting installation of $category"
    install_category "$category" "${categories[$category]}"
done

# System cleanup and optimization
echo "Performing system cleanup..."
apt-get autoremove -y
apt-get clean

# Create installation documentation
echo "Creating installation documentation..."
cat > /root/kali_tools_installed.txt << EOF
Kali Linux Tools Installation Report
Installation Date: $(date)
Original sources.list backup location: /etc/apt/sources.list.backup

Installed Categories and Tools:
EOF

for category in "${!categories[@]}"; do
    echo -e "\n== $category ==" >> /root/kali_tools_installed.txt
    echo "${categories[$category]}" | tr ' ' '\n' | sort >> /root/kali_tools_installed.txt
done

echo -e "\nIMPORTANT: These tools are for security research and educational purposes only." >> /root/kali_tools_installed.txt
echo -e "Use responsibly and only on systems you own or have explicit permission to test." >> /root/kali_tools_installed.txt

echo "Installation complete! Please check /root/kali_tools_installed.txt for full details."
echo "IMPORTANT: Some tools may require additional configuration."
